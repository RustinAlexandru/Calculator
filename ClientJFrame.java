import java.rmi.*;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.InputMap;
import javax.swing.KeyStroke;
import javax.swing.JComponent;

public class ClientJFrame extends javax.swing.JFrame  {

    
    private static final String hostName = "localhost";
    private static final String rmiObjectName = "rmi://" + hostName + "/myCalculator";
    private static  ICalculator calculator;
    private static double firstOperand;
    private static double secondOperand;
    private static double lastResult = 0;
    private static String operator;
    private static String lastOperator = "0";
    private static double memory = 0;
    private static boolean clearOnNextDigit = true ;
    
    /**
     * Creates new form ClientJFrame
     */
    public ClientJFrame() {
        initComponents();
        myInit();
    }

    
    private void myInit() {
        try {
        calculator = (ICalculator) Naming.lookup(rmiObjectName);
        }
        catch(Exception e) {
            e.printStackTrace();
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButtonC = new javax.swing.JButton();
        jButtonPM = new javax.swing.JButton();
        jButtonBack = new javax.swing.JButton();
        jButton0 = new javax.swing.JButton();
        jButtonDot = new javax.swing.JButton();
        jButtonEqual = new javax.swing.JButton();
        jButtonInverse = new javax.swing.JButton();
        jButtonFactorial = new javax.swing.JButton();
        jButtonPower = new javax.swing.JButton();
        jButtonPlus = new javax.swing.JButton();
        jButtonMinus = new javax.swing.JButton();
        jButtonMultiply = new javax.swing.JButton();
        jButtonDivide = new javax.swing.JButton();
        jButtonSqrt = new javax.swing.JButton();
        jButtonMC = new javax.swing.JButton();
        jButtonMR = new javax.swing.JButton();
        jButtonMS = new javax.swing.JButton();
        jButtonMplus = new javax.swing.JButton();
        jButtonMminus = new javax.swing.JButton();
        displayArea = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("1");
        jButton1.setBorder(new javax.swing.border.MatteBorder(null));
        jButton1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButton1.setPreferredSize(new java.awt.Dimension(30, 29));
        jButton1.setSize(new java.awt.Dimension(30, 30));
        Action jButton1action = new AbstractAction()
        {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent e)
            {

                putDigitOnDisplay(1);
            }
        };

        jButton1.addActionListener(jButton1action);
        KeyStroke pressed1 = KeyStroke.getKeyStroke('1');
        InputMap inputMap1 = jButton1.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap1.put(pressed1, "fire");
        jButton1.getActionMap().put("fire", jButton1action);

        jButton2.setText("2");
        jButton2.setBorder(new javax.swing.border.MatteBorder(null));
        jButton2.setPreferredSize(new java.awt.Dimension(30, 29));
        jButton2.setSize(new java.awt.Dimension(30, 30));
        Action jButton2action = new AbstractAction()
        {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent e)
            {
                putDigitOnDisplay(2);
            }
        };

        jButton2.addActionListener(jButton2action);
        KeyStroke pressed2 = KeyStroke.getKeyStroke('2');
        InputMap inputMap2 = jButton2.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap2.put(pressed2, "fire");
        jButton2.getActionMap().put("fire", jButton2action);

        jButton3.setText("3");
        jButton3.setBorder(new javax.swing.border.MatteBorder(null));
        jButton3.setPreferredSize(new java.awt.Dimension(30, 29));
        jButton3.setSize(new java.awt.Dimension(30, 30));
        Action jButton3action = new AbstractAction()
        {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent e)
            {
                putDigitOnDisplay(3);
            }
        };

        jButton3.addActionListener(jButton3action);
        KeyStroke pressed3 = KeyStroke.getKeyStroke('3');
        InputMap inputMap3 = jButton3.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap3.put(pressed3, "fire");
        jButton3.getActionMap().put("fire", jButton3action);

        jButton6.setText("6");
        jButton6.setBorder(new javax.swing.border.MatteBorder(null));
        jButton6.setPreferredSize(new java.awt.Dimension(30, 29));
        jButton6.setSize(new java.awt.Dimension(30, 30));
        Action jButton6action = new AbstractAction()
        {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent e)
            {
                putDigitOnDisplay(6);
            }
        };

        jButton6.addActionListener(jButton6action);
        KeyStroke pressed = KeyStroke.getKeyStroke('6');
        InputMap inputMap = jButton6.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap.put(pressed, "fire");
        jButton6.getActionMap().put("fire", jButton6action);

        jButton5.setText("5");
        jButton5.setBorder(new javax.swing.border.MatteBorder(null));
        jButton5.setPreferredSize(new java.awt.Dimension(30, 29));
        jButton5.setSize(new java.awt.Dimension(30, 30));
        Action jButton5action = new AbstractAction()
        {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent e)
            {
                putDigitOnDisplay(5);
            }
        };

        jButton5.addActionListener(jButton5action);
        KeyStroke pressed5 = KeyStroke.getKeyStroke('5');
        InputMap inputMap5 = jButton5.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap5.put(pressed5, "fire");
        jButton5.getActionMap().put("fire", jButton5action);

        jButton4.setText("4");
        jButton4.setBorder(new javax.swing.border.MatteBorder(null));
        jButton4.setPreferredSize(new java.awt.Dimension(30, 29));
        jButton4.setSize(new java.awt.Dimension(30, 30));
        Action jButton4action = new AbstractAction()
        {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent e)
            {
                putDigitOnDisplay(4);
            }
        };

        jButton4.addActionListener(jButton4action);
        KeyStroke pressed4 = KeyStroke.getKeyStroke('4');
        InputMap inputMap4 = jButton4.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap4.put(pressed4, "fire");
        jButton4.getActionMap().put("fire", jButton4action);

        jButton9.setText("9");
        jButton9.setBorder(new javax.swing.border.MatteBorder(null));
        jButton9.setPreferredSize(new java.awt.Dimension(30, 29));
        jButton9.setSize(new java.awt.Dimension(30, 30));
        Action jButton9action = new AbstractAction()
        {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent e)
            {
                putDigitOnDisplay(9);
            }
        };

        jButton9.addActionListener(jButton9action);
        KeyStroke pressed9 = KeyStroke.getKeyStroke('9');
        InputMap inputMap9 = jButton9.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap9.put(pressed9, "fire");
        jButton9.getActionMap().put("fire", jButton9action);

        jButton8.setText("8");
        jButton8.setBorder(new javax.swing.border.MatteBorder(null));
        jButton8.setPreferredSize(new java.awt.Dimension(30, 29));
        jButton8.setSize(new java.awt.Dimension(30, 30));
        Action jButton8action = new AbstractAction()
        {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent e)
            {
                putDigitOnDisplay(8);
            }
        };

        jButton8.addActionListener(jButton8action);
        KeyStroke pressed8 = KeyStroke.getKeyStroke('8');
        InputMap inputMap8 = jButton8.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap8.put(pressed8, "fire");
        jButton8.getActionMap().put("fire", jButton8action);

        jButton7.setText("7");
        jButton7.setBorder(new javax.swing.border.MatteBorder(null));
        jButton7.setPreferredSize(new java.awt.Dimension(30, 29));
        jButton7.setSize(new java.awt.Dimension(30, 30));
        Action jButton7action = new AbstractAction()
        {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent e)
            {
                putDigitOnDisplay(7);
            }
        };

        jButton7.addActionListener(jButton7action);
        KeyStroke pressed7 = KeyStroke.getKeyStroke('7');
        InputMap inputMap7 = jButton7.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap7.put(pressed7, "fire");
        jButton7.getActionMap().put("fire", jButton7action);

        jButtonC.setText("C");
        jButtonC.setBorder(new javax.swing.border.MatteBorder(null));
        jButtonC.setPreferredSize(new java.awt.Dimension(30, 29));
        jButtonC.setSize(new java.awt.Dimension(30, 30));
        jButtonC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCActionPerformed(evt);
            }
        });

        jButtonPM.setText("\u00B1");
        jButtonPM.setBorder(new javax.swing.border.MatteBorder(null));
        jButtonPM.setPreferredSize(new java.awt.Dimension(30, 29));
        jButtonPM.setSize(new java.awt.Dimension(30, 30));
        jButtonPM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPMActionPerformed(evt);
            }
        });

        jButtonBack.setText("\u2190");
        jButtonBack.setBorder(new javax.swing.border.MatteBorder(null));
        jButtonBack.setPreferredSize(new java.awt.Dimension(30, 29));
        jButtonBack.setSize(new java.awt.Dimension(30, 30));
        jButtonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBackActionPerformed(evt);
            }
        });

        jButton0.setText("0");
        jButton0.setBorder(new javax.swing.border.MatteBorder(null));
        jButton0.setPreferredSize(new java.awt.Dimension(30, 29));
        jButton0.setSize(new java.awt.Dimension(30, 30));
        Action jButton0action = new AbstractAction()
        {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent e)
            {
                putDigitOnDisplay(0);
            }
        };

        jButton0.addActionListener(jButton0action);
        KeyStroke pressed0 = KeyStroke.getKeyStroke('0');
        InputMap inputMap0 = jButton0.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap0.put(pressed0, "fire");
        jButton0.getActionMap().put("fire", jButton0action);

        jButtonDot.setText(".");
        jButtonDot.setBorder(new javax.swing.border.MatteBorder(null));
        jButtonDot.setPreferredSize(new java.awt.Dimension(30, 29));
        jButtonDot.setSize(new java.awt.Dimension(30, 30));
        Action jButtonDotAction = new AbstractAction()
        {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent e)
            {
                displayArea.setText(displayArea.getText()+".");
            }
        };

        jButtonDot.addActionListener(jButtonDotAction);
        KeyStroke pressedDot = KeyStroke.getKeyStroke('.');
        InputMap inputMapDot = jButtonDot.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMapDot.put(pressedDot, "fire");
        jButtonDot.getActionMap().put("fire", jButtonDotAction);

        jButtonEqual.setText("=");
        jButtonEqual.setBorder(new javax.swing.border.MatteBorder(null));
        jButtonEqual.setPreferredSize(new java.awt.Dimension(30, 29));
        jButtonEqual.setSize(new java.awt.Dimension(30, 30));
        jButtonEqual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEqualActionPerformed(evt);
            }
        });

        jButtonInverse.setText("1/x");
        jButtonInverse.setBorder(new javax.swing.border.MatteBorder(null));
        jButtonInverse.setPreferredSize(new java.awt.Dimension(30, 29));
        jButtonInverse.setSize(new java.awt.Dimension(30, 30));
        jButtonInverse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInverseActionPerformed(evt);
            }
        });

        jButtonFactorial.setText("n!");
        jButtonFactorial.setBorder(new javax.swing.border.MatteBorder(null));
        jButtonFactorial.setPreferredSize(new java.awt.Dimension(30, 29));
        jButtonFactorial.setSize(new java.awt.Dimension(30, 30));
        jButtonFactorial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFactorialActionPerformed(evt);
            }
        });

        jButtonPower.setText("xⁱ");
        jButtonPower.setBorder(new javax.swing.border.MatteBorder(null));
        jButtonPower.setPreferredSize(new java.awt.Dimension(30, 29));
        jButtonPower.setSize(new java.awt.Dimension(30, 30));
        jButtonPower.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPowerActionPerformed(evt);
            }
        });

        jButtonPlus.setText("+");
        jButtonPlus.setBorder(new javax.swing.border.MatteBorder(null));
        jButtonPlus.setPreferredSize(new java.awt.Dimension(30, 29));
        jButtonPlus.setSize(new java.awt.Dimension(30, 30));
        jButtonPlus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPlusActionPerformed(evt);
            }
        });

        jButtonMinus.setText("-");
        jButtonMinus.setBorder(new javax.swing.border.MatteBorder(null));
        jButtonMinus.setPreferredSize(new java.awt.Dimension(30, 29));
        jButtonMinus.setSize(new java.awt.Dimension(30, 30));
        jButtonMinus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMinusActionPerformed(evt);
            }
        });

        jButtonMultiply.setText("*");
        jButtonMultiply.setBorder(new javax.swing.border.MatteBorder(null));
        jButtonMultiply.setPreferredSize(new java.awt.Dimension(30, 29));
        jButtonMultiply.setSize(new java.awt.Dimension(30, 30));
        jButtonMultiply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMultiplyActionPerformed(evt);
            }
        });

        jButtonDivide.setText("/");
        jButtonDivide.setBorder(new javax.swing.border.MatteBorder(null));
        jButtonDivide.setPreferredSize(new java.awt.Dimension(30, 29));
        jButtonDivide.setSize(new java.awt.Dimension(30, 30));
        jButtonDivide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDivideActionPerformed(evt);
            }
        });

        jButtonSqrt.setText("√x");
        jButtonSqrt.setBorder(new javax.swing.border.MatteBorder(null));
        jButtonSqrt.setPreferredSize(new java.awt.Dimension(30, 29));
        jButtonSqrt.setSize(new java.awt.Dimension(30, 30));
        jButtonSqrt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSqrtActionPerformed(evt);
            }
        });

        jButtonMC.setText("MC");
        jButtonMC.setBorder(new javax.swing.border.MatteBorder(null));
        jButtonMC.setPreferredSize(new java.awt.Dimension(30, 29));
        jButtonMC.setSize(new java.awt.Dimension(30, 30));
        jButtonMC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMCActionPerformed(evt);
            }
        });

        jButtonMR.setText("MR");
        jButtonMR.setBorder(new javax.swing.border.MatteBorder(null));
        jButtonMR.setPreferredSize(new java.awt.Dimension(30, 29));
        jButtonMR.setSize(new java.awt.Dimension(30, 30));
        jButtonMR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMRActionPerformed(evt);
            }
        });

        jButtonMS.setText("MS");
        jButtonMS.setBorder(new javax.swing.border.MatteBorder(null));
        jButtonMS.setPreferredSize(new java.awt.Dimension(30, 29));
        jButtonMS.setSize(new java.awt.Dimension(30, 30));
        jButtonMS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMSActionPerformed(evt);
            }
        });

        jButtonMplus.setText("M+");
        jButtonMplus.setBorder(new javax.swing.border.MatteBorder(null));
        jButtonMplus.setPreferredSize(new java.awt.Dimension(30, 29));
        jButtonMplus.setSize(new java.awt.Dimension(30, 30));
        jButtonMplus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMplusActionPerformed(evt);
            }
        });

        jButtonMminus.setText("M-");
        jButtonMminus.setBorder(new javax.swing.border.MatteBorder(null));
        jButtonMminus.setPreferredSize(new java.awt.Dimension(30, 29));
        jButtonMminus.setSize(new java.awt.Dimension(30, 30));
        jButtonMminus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMminusActionPerformed(evt);
            }
        });

        displayArea.setFocusable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jButton0, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jButtonDot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonBack, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonPM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonPlus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonSqrt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonDivide, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonMultiply, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonMinus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonPower, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonFactorial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonInverse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonEqual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(displayArea, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jButtonMC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jButtonMR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jButtonMS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jButtonMplus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jButtonMminus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(39, Short.MAX_VALUE)
                .addComponent(displayArea, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonMplus, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonMminus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonMC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonMR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonMS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButtonSqrt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonDivide, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonMultiply, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonMinus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonPlus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jButtonPower, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jButtonFactorial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jButtonInverse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jButtonEqual, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButtonPM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButtonC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButtonBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButtonDot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(34, 34, 34))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    void putDigitOnDisplay(int digit){
        if (clearOnNextDigit)
            displayArea.setText((""));

        String display = displayArea.getText();
	
		if (!display.equals("0") || digit > 0) {
			displayArea.setText(display + digit);
		}
		
                clearOnNextDigit = false;
	}
    
    private double getDisplayOperand() {
         return Double.parseDouble(displayArea.getText());
    }
    
    private double applyOperator() {
        
        double result = 0.0;
        
        secondOperand = getDisplayOperand();
                
        switch(lastOperator) {
        
        case "plus":
            try {
                
              result = calculator.plus(lastResult, secondOperand);
             
             if ((result == Math.floor(result )) && !Double.isInfinite(result )) {
                displayArea.setText(String.valueOf((int)(result)));
                } 
            else displayArea.setText(String.valueOf(result));
            
            }  catch (Exception e) {
            e.printStackTrace();
            }
            
        return result;
        
        
        case "minus":
            try {
                
             result = calculator.minus(lastResult, secondOperand);
             
             if ((result == Math.floor(result )) && !Double.isInfinite(result )) {
                displayArea.setText(String.valueOf((int)(result)));
                } 
            else displayArea.setText(String.valueOf(result));
            
            }  catch (Exception e) {
            e.printStackTrace();
            }
        
        return result;
        
            
        case "divide":
           try {
                
            result = calculator.division(lastResult, secondOperand);
             
             if ((result == Math.floor(result )) && !Double.isInfinite(result )) {
                displayArea.setText(String.valueOf((int)(result)));
                } 
            else displayArea.setText(String.valueOf(result));
            
            }  catch (Exception e) {
            e.printStackTrace();
            }
           
        return result;
            
        case "multiply":
           try {
                
             result = calculator.multiply(lastResult, secondOperand);
             
             if ((result == Math.floor(result )) && !Double.isInfinite(result )) {
                displayArea.setText(String.valueOf((int)(result)));
                } 
            else displayArea.setText(String.valueOf(result));
            
            }  catch (Exception e) {
            e.printStackTrace();
            }
       
        return result;
        
        case "power":
            try {
                
             result = calculator.power(lastResult, secondOperand);
             
             if ((result == Math.floor(result )) && !Double.isInfinite(result )) {
                displayArea.setText(String.valueOf((int)(result)));
                } 
            else displayArea.setText(String.valueOf(result));
            
            }  catch (Exception e) {
            e.printStackTrace();
            }
       
        return result;
        
        case "sqrt":
            try {
            displayArea.setText(String.valueOf(calculator.sqrt(secondOperand)));
             }
            catch (Exception e) {
            e.printStackTrace();
            }
        
        return result;
            
        case "inverse":
            try {
            displayArea.setText(String.valueOf(calculator.inverse(secondOperand)));
             }
            catch (Exception e) {
            e.printStackTrace();
            }
        
        return result;
            
        case "factorial":
            try {
            displayArea.setText(String.valueOf(calculator.factorial(secondOperand)));
             }
            catch (Exception e) {
            e.printStackTrace();
            }
        
        return result;
            
        }
        
        return 0.0;
    }
    
    private void jButtonPlusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPlusActionPerformed
        
         firstOperand = getDisplayOperand();
        
        if (!lastOperator.equals("0")) {
            
            double result = applyOperator();
        
            lastResult = result;
        
        }
        else {
            lastResult = firstOperand;
        }
        
        operator = "plus";  
        lastOperator = "plus";
        clearOnNextDigit = true;
        
       
        
    }//GEN-LAST:event_jButtonPlusActionPerformed

    private void jButtonEqualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEqualActionPerformed
        // TODO add your handling code here:
        if (! (  lastOperator.equals("sqrt") || 
                lastOperator.equals("inverse") || 
                lastOperator.equals("factorial") ) ){
             
        applyOperator();
        }
        clearOnNextDigit = true;
        lastOperator = "0";
    }//GEN-LAST:event_jButtonEqualActionPerformed

    private void jButtonMinusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMinusActionPerformed
        // TODO add your handling code here:
        firstOperand = getDisplayOperand();
        
        if (!lastOperator.equals("0")) {
            
            double result = applyOperator();
        
            lastResult = result;
        
        }
        else {
            lastResult = firstOperand;
        }
        
        operator = "minus";  
        lastOperator = "minus";
        clearOnNextDigit = true;
    }//GEN-LAST:event_jButtonMinusActionPerformed

    private void jButtonMultiplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMultiplyActionPerformed
        // TODO add your handling code here:
        firstOperand = getDisplayOperand();
        
        if (!lastOperator.equals("0")) {
            
            double result = applyOperator();
        
            lastResult = result;
        
        }
        else {
            lastResult = firstOperand;
        }
        
        operator = "multiply";  
        lastOperator = "multiply";
        clearOnNextDigit = true;
    }//GEN-LAST:event_jButtonMultiplyActionPerformed

    private void jButtonDivideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDivideActionPerformed
        // TODO add your handling code here:
        firstOperand = getDisplayOperand();
        
        if (!lastOperator.equals("0")) {
            
            double result = applyOperator();
        
            lastResult = result;
        
        }
        else {
            lastResult = firstOperand;
        }
        
        operator = "divide";  
        lastOperator = "divide";
        clearOnNextDigit = true;
    }//GEN-LAST:event_jButtonDivideActionPerformed

    private void jButtonSqrtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSqrtActionPerformed
        // TODO add your handling code here:
        operator = "sqrt";
        lastOperator = "sqrt";
        applyOperator();
    }//GEN-LAST:event_jButtonSqrtActionPerformed

    private void jButtonPowerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPowerActionPerformed
        // TODO add your handling code here:
        firstOperand = getDisplayOperand();
        
        if (!lastOperator.equals("0")) {
            
            double result = applyOperator();
        
            lastResult = result;
        
        }
        else {
            lastResult = firstOperand;
        }
        
        operator = "power";  
        lastOperator = "power";
        clearOnNextDigit = true;
    }//GEN-LAST:event_jButtonPowerActionPerformed

    private void jButtonFactorialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFactorialActionPerformed
        // TODO add your handling code here:
        operator = "factorial";
        lastOperator = "factorial";
        applyOperator();
    }//GEN-LAST:event_jButtonFactorialActionPerformed

    private void jButtonInverseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInverseActionPerformed
        // TODO add your handling code here:
        operator = "inverse";
        lastOperator = "inverse";
        applyOperator();
    }//GEN-LAST:event_jButtonInverseActionPerformed

    private void jButtonCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCActionPerformed
        // TODO add your handling code here:
        displayArea.setText("");
        lastOperator = "0";
        clearOnNextDigit = true;
    }//GEN-LAST:event_jButtonCActionPerformed

    private void jButtonMSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMSActionPerformed
        // TODO add your handling code here:
        memory =  getDisplayOperand();
    }//GEN-LAST:event_jButtonMSActionPerformed

    private void jButtonMCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMCActionPerformed
        // TODO add your handling code here:
        memory = 0 ;
    }//GEN-LAST:event_jButtonMCActionPerformed

    private void jButtonMRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMRActionPerformed
        // TODO add your handling code here:
        displayArea.setText(String.valueOf(memory));
    }//GEN-LAST:event_jButtonMRActionPerformed

    private void jButtonMplusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMplusActionPerformed
        // TODO add your handling code here:
        try {
        memory = calculator.plus(memory, Double.parseDouble(displayArea.getText()));
        }
        catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButtonMplusActionPerformed

    private void jButtonMminusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMminusActionPerformed
        // TODO add your handling code here:
         try {
        memory = calculator.minus(memory, Double.parseDouble(displayArea.getText()));
        }
        catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButtonMminusActionPerformed

    private void jButtonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBackActionPerformed
        // TODO add your handling code here:
        String display = displayArea.getText();
        displayArea.setText(display.substring(0, display.length()-1 ));
    }//GEN-LAST:event_jButtonBackActionPerformed

    private void jButtonPMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPMActionPerformed
        // TODO add your handling code here:
        String display = displayArea.getText();

			if (display.length() > 0 && !display.equals("0"))
			{
				if (display.indexOf("-") == 0)
					displayArea.setText(display.substring(1));

				else
					displayArea.setText("-" + display);
			}
    }//GEN-LAST:event_jButtonPMActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientJFrame().setVisible(true);
                
                try {
                    ICalculator calculator = (ICalculator) Naming.lookup("rmi://"
                            + hostName + "/myCalculator");
                    
                } catch (ConnectException conEx) {
                    System.out.println("Unable to connect to server!");
                    System.exit(1);
                } catch (Exception ex) {
                    ex.printStackTrace();
                    System.exit(1);
                }
                
               
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField displayArea;
    private javax.swing.JButton jButton0;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JButton jButtonBack;
    private javax.swing.JButton jButtonC;
    private javax.swing.JButton jButtonDivide;
    private javax.swing.JButton jButtonDot;
    private javax.swing.JButton jButtonEqual;
    private javax.swing.JButton jButtonFactorial;
    private javax.swing.JButton jButtonInverse;
    private javax.swing.JButton jButtonMC;
    private javax.swing.JButton jButtonMR;
    private javax.swing.JButton jButtonMS;
    private javax.swing.JButton jButtonMinus;
    private javax.swing.JButton jButtonMminus;
    private javax.swing.JButton jButtonMplus;
    private javax.swing.JButton jButtonMultiply;
    private javax.swing.JButton jButtonPM;
    private javax.swing.JButton jButtonPlus;
    private javax.swing.JButton jButtonPower;
    private javax.swing.JButton jButtonSqrt;
    // End of variables declaration//GEN-END:variables
}
